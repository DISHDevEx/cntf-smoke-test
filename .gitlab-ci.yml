stages:
  - subscribe
  - deploy
  - test
  - update_tests
  - cleanup


#Create one new UE on the network


ue_populate_random:
  allow_failure: true
  stage: subscribe
  image: ubuntu:latest
  variables:
    REGION: us-east-1
    CLUSTER_NAME: cntf-open5gs-cluster
  environment: 
    name: open5gs_cluster
  artifacts:
    paths:
      - IMSI_ID
  before_script:
  # Install dependencies and connect to cluster
    - apt-get update && apt-get install -y curl unzip
    - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip awscliv2.zip
    - ./aws/install
    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    - chmod +x kubectl
    - mv kubectl /usr/local/bin/
    - aws eks update-kubeconfig --name $CLUSTER_NAME --region $REGION
    - chmod +x ue_populate_database.sh # please consider applying this command manually 
    - chmod +w time_to_populate_database.txt # please consider applying this command manually 
    - POPULATE_POD=$(kubectl -n openverso get pod --output=jsonpath={.items..metadata.name} -l app.kubernetes.io/component=populate)
    - kubectl -n openverso cp ./time_to_populate_database.txt $POPULATE_POD:/time_to_populate_database.txt
  script:
    - kubectl cp ./ue_populate_database.sh -n openverso $POPULATE_POD:/
    - kubectl exec -n openverso $POPULATE_POD -- bash -c "/ue_populate_database.sh"
    - echo $IMSI_ID > IMSI_ID


#Job that runs ueransim using that subscriber ID and executes script


deploy test-ue:
  image:
    name: alpine/helm
    entrypoint: [""]
  stage: deploy
  needs:
    - job: ue_populate_random
      artifacts: true
  variables:
    REGION: us-east-1
    CLUSTER_NAME: cntf-open5gs-cluster
  artifacts: 
    paths: 
      - IMSI_ID 
  environment:
    name: open5gs_cluster 
  script: 
    - apk add --no-cache python3 py3-pip jq
    - pip3 install --upgrade pip 
    - pip3 install --no-cache-dir awscli
    - aws --version
    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    - chmod +x kubectl
    - mv kubectl /usr/local/bin/
    - aws eks update-kubeconfig --region $REGION --name $CLUSTER_NAME
    - helm repo add openverso https://gradiant.github.io/openverso-charts/
# source IMSI_ID value
    - IMSI_ID=$(cat IMSI_ID)
    - >
      COMMON_LABEL=$(jq -n --arg CI_PIPELINE_ID "$CI_PIPELINE_ID" '{"gitlab-pipeline": $CI_PIPELINE_ID}')
    - >
      helm template -n openverso ueransim-ues-smoke-test  openverso/ueransim-ues \
        --set ues.initialMSISDN="${IMSI_ID}"   \
        --set-json commonLabels="${COMMON_LABEL}" \
        --values https://raw.githubusercontent.com/DISHDevEx/napp/main/napp/open5gs_values/gnb_ues_values.yaml
    - > 
      helm -n openverso upgrade --install ueransim-ues-smoke-test  openverso/ueransim-ues \
        --set ues.initialMSISDN="${IMSI_ID}"   \
        --set-json commonLabels="${COMMON_LABEL}" \
        --values https://raw.githubusercontent.com/DISHDevEx/napp/main/napp/open5gs_values/gnb_ues_values.yaml
   

# Execute script which performs curls over the network vs the internet


smoke_test_scheduled:
  image: ubuntu:latest
  variables:
    REGION: us-east-1
    CLUSTER_NAME: cntf-open5gs-cluster
  needs:
    - job: deploy test-ue
    - job: ue_populate_random
      artifacts: true
  stage: test
  environment:
    name: open5gs_cluster
  artifacts:
    paths:
      - over5g.json
      - overinternet.json 
  script:
    - apt update
    - apt install -y python3
    - python3 --version 
    - apt-get update && apt-get install -y curl unzip
    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip awscliv2.zip
    - ./aws/install
    - chmod +x kubectl
    - mv kubectl /usr/local/bin/
    - aws eks update-kubeconfig --name $CLUSTER_NAME --region $REGION
    - UE_POD=$(kubectl -n openverso get pod --output=jsonpath={.items..metadata.name} -l pod-template-hash=697554b858) 
    - kubectl -n openverso cp ./ueransim_smoke_test.sh $UE_POD:/tmp/ueransim_smoke_test.sh
    - kubectl -n openverso exec $UE_POD -- bash -c "/tmp/ueransim_smoke_test.sh >&1"
    

# Update local files and S3


update_test_results:
  allow_failure: true
  image:
    name: alpine/helm
    entrypoint: [""]
  variables:
    REGION: us-east-1
    CLUSTER_NAME: cntf-open5gs-cluster
  stage: update_tests
  script:
    - apk add --no-cache python3 py3-pip jq
    - pip3 install --upgrade pip 
    - pip3 install --no-cache-dir awscli
    - pip3 install --no-cache-dir boto3  
    - aws --version
    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    - chmod +x kubectl
    - mv kubectl /usr/local/bin/
    - aws eks update-kubeconfig --region $REGION --name $CLUSTER_NAME
    - helm repo add openverso https://gradiant.github.io/openverso-charts/
    - python3 ./s3_test_results_coralogix.py # converts over5g.json & overinternet.json files into objects in an S3 bucket
    - sh ./update_test_results.sh # continuously updates new local test data and S3
  rules:
    - when: always


# Job that removes subscriber from the network


cleanup:
  image:
    name: alpine/helm
    entrypoint: [""]
  variables:
    REGION: us-east-1
    CLUSTER_NAME: cntf-open5gs-cluster
  needs:
    - job: smoke_test_scheduled
    - job: ue_populate_random
      artifacts: true
  stage: cleanup
  environment:
    name: open5gs_cluster
  script:
    - apk add --no-cache python3 py3-pip 
    - pip3 install --upgrade pip 
    - pip3 install --no-cache-dir awscli
    - aws --version
    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    - chmod +x kubectl
    - mv kubectl /usr/local/bin/
    - aws eks update-kubeconfig --region $REGION --name $CLUSTER_NAME
    - helm repo add openverso https://gradiant.github.io/openverso-charts/
# remove smoke-test helm release
    - helm -n openverso uninstall ueransim-ues-smoke-test
# delete test IMSI from subscriber database
    - IMSI_ID=$(cat IMSI_ID)
    - printf $IMSI_ID
    - POPULATE_POD=$(kubectl -n openverso get pod --output=jsonpath={.items..metadata.name} -l app.kubernetes.io/component=populate)
    - kubectl -n openverso exec $POPULATE_POD --  open5gs-dbctl remove ${IMSI_ID}
  rules:
    - when: always



    

